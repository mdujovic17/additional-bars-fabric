plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = "${ project.mod_version }+${ project.minecraft_version }"
group = project.maven_group

base {
	archivesBaseName = project.archives_base_name
}

repositories {
//	maven {
//		name = 'Jitpack'
//		url = 'https://jitpack.io'
//	}
	maven {
		name = 'Shedaniel maven'
		url = "https://maven.shedaniel.me/"
	}
	maven {
		name = 'TerraformersMC maven'
		url = "https://maven.terraformersmc.com/"
	}
//
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
//
//	maven {
//		url = "https://repo.minelittlepony-mod.com/maven/release"
//	}
	//flatDir { dirs "libs" }
}

loom {
	splitEnvironmentSourceSets()
		mods  {
			"additionalbars" {
				sourceSet sourceSets.main
				sourceSet sourceSets.client
			}
		}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei}"
	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu}"

	// Presence Footsteps
	// modRuntimeOnly "com.minelittlepony:kirin:${project.kirin}"
	// modRuntimeOnly "maven.modrinth:presence-footsteps:${project.presence_footsteps}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

fabricApi {
	configureDataGeneration {
		createSourceSet = true
		modId = "additionalbars_datagen"
		strictValidation = true
		client = true
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
